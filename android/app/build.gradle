apply plugin: 'com.android.application'
apply plugin: 'org.mozilla.rust-android-gradle.rust-android'

import org.apache.tools.ant.taskdefs.condition.Os

android {
    compileSdk 34
    ndkVersion "26.3.11579264"
    defaultConfig {
        applicationId "tw.mapacode.androidsink"
        minSdkVersion 28
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        viewBinding = true
    }
    namespace 'tw.mapacode.androidsink'
}


cargo {
    apiLevel = 34
    module  = "."
    libname = "androidsink"
    targets = ["arm", "x86", "arm64", "x86_64"]
    verbose = true
    prebuiltToolchains = true
    targetDirectory = "../target"
    exec { spec, toolchain ->
        // Host tag as described in https://developer.android.com/ndk/guides/other_build_systems
        String host_tag = ""
        if (Os.isFamily(Os.FAMILY_MAC)) {
            host_tag = "darwin-x86_64"
        } else if (Os.isFamily(Os.FAMILY_UNIX)) {
            host_tag = "linux-x86_64"
        } else if (Os.isFamily(Os.FAMILY_WINDOWS)) {
            host_tag = "windows-x86_64"
        }

        String gstreamer_architecture = ""
        String clang_architecture = ""
        if (toolchain.target == "armv7-linux-androideabi") {
            gstreamer_architecture = "armv7"
            clang_architecture = "arm"
        }
        if (toolchain.target == "aarch64-linux-android") {
            gstreamer_architecture = "arm64"
            clang_architecture = "aarch64"
        }
        if (toolchain.target == "i686-linux-android") {
            gstreamer_architecture = "x86"
            clang_architecture = "i686"
        }
        if (toolchain.target == "x86_64-linux-android") {
            gstreamer_architecture = "x86_64"
            clang_architecture = "x86_64"
        }
        def gstreamer_android_root_path = System.getenv('GSTREAMER_1_0_ROOT_ANDROID')

        def rustflag_list = [""]
        rustflag_list.add("-L$android.ndkDirectory.absolutePath/toolchains/llvm/prebuilt/$host_tag/lib/clang/17.0.2/lib/linux")
        rustflag_list.add("-L$gstreamer_android_root_path/$gstreamer_architecture/lib/gstreamer-1.0")
        rustflag_list.add("-lclang_rt.builtins-$clang_architecture-android")
        rustflag_list.add("-lc++abi")
        rustflag_list.add("-lffi -lEGL -lz")
        rustflag_list.add("-liconv -lorc-0.4 -lgmodule-2.0 -lpcre2-8")
        rustflag_list.add("-lgstcoreelements -lgstvideotestsrc -lgstautodetect -lgstvideo-1.0 -lgstapp")
        rustflag_list.add("-lgstopengl -lgstgl-1.0 -lgstcontroller-1.0 -lgraphene-1.0 -ljpeg -lpng16")
        rustflag_list.add("-lopenh264 -lgstopenh264 -lgstpbutils-1.0 -lgstvideoconvertscale")
        rustflag_list.add("-lgstandroidmedia -lgstaudio-1.0 -lgstphotography-1.0")
        def rustflags = rustflag_list.join(" ")
        project.logger.info("RUSTFLAGS: $rustflags")
        spec.environment("RUSTFLAGS", rustflags)

        spec.environment("PKG_CONFIG_ALLOW_CROSS", "1")
        spec.environment("PKG_CONFIG_PATH", "$gstreamer_android_root_path/$gstreamer_architecture/lib/pkgconfig")
    }
}

dependencies {
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    preBuild.dependsOn "cargoBuild"
}